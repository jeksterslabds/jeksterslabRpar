% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/par_lapply.R
\name{par_lapply}
\alias{par_lapply}
\title{Parallel \code{lapply}}
\usage{
par_lapply(
  X,
  FUN,
  ...,
  par = TRUE,
  ncores = NULL,
  mc = TRUE,
  lb = FALSE,
  cl_eval = FALSE,
  cl_export = FALSE,
  cl_expr,
  cl_vars,
  rbind = NULL
)
}
\arguments{
\item{X}{Vector or list.
Each element will be passed as the first argument of \code{FUN}.}

\item{FUN}{Function to be applied to each element of \code{X}.}

\item{...}{Arguments to pass to \code{FUN}.}

\item{par}{Logical.
If \code{TRUE}, use multiple cores.
If \code{FALSE}, use \code{\link[=lapply]{lapply()}}.}

\item{ncores}{Integer.
Number of cores to use if \code{par = TRUE}.
If unspecified, defaults to \code{detectCores() - 1}.}

\item{mc}{Logical.
If \code{TRUE}, use \code{\link[parallel:mclapply]{parallel::mclapply()}}.
If \code{FALSE}, use \code{\link[parallel:clusterApply]{parallel::parLapply()}} or \code{\link[parallel:clusterApply]{parallel::parLapplyLB()}}.
Ignored if \code{par = FALSE}.}

\item{lb}{Logical.
If \code{TRUE} use \code{\link[parallel:clusterApply]{parallel::parLapplyLB()}}.
If \code{FALSE}, use \code{\link[parallel:clusterApply]{parallel::parLapply()}}.
Ignored if \code{par = FALSE} and \code{mc = TRUE}.}

\item{cl_eval}{Logical.
Execute \code{\link[parallel:clusterApply]{parallel::clusterEvalQ()}} using \code{cl_expr}.
Ignored if \code{mc = TRUE}.}

\item{cl_export}{Logical.
Execute \code{\link[parallel:clusterApply]{parallel::clusterExport()}} using \code{cl_vars}.
Ignored if \code{mc = TRUE}.}

\item{cl_expr}{Expression.
Expression passed to \code{\link[parallel:clusterApply]{parallel::clusterEvalQ()}}
Ignored if \code{mc = TRUE}.}

\item{cl_vars}{Character vector.
Names of objects to pass to \code{\link[parallel:clusterApply]{parallel::clusterExport()}}
Ignored if \code{mc = TRUE}.}

\item{rbind}{NULL or logical.
If \code{rbind = NULL},
returns the list produced.
If \code{TRUE}, uses \code{\link[=rbind]{rbind()}}
to bind the rows of the list produced.
If \code{FALSE}, uses \code{\link[=cbind]{cbind()}}
to bind the columns of the list produced.
Test that each element of the output list
has the appropriate dimensions for binding
before using this option.}
}
\value{
Returns the results of \code{FUN} for each element of \code{X}.
}
\description{
This is a wrapper function for different implementations of \code{lapply}.
}
\examples{
X <- rep(x = 5, times = 5)
# rbind = NULL----------------------------------------------------------------
set.seed(42)
par_lapply(
  X = X,
  FUN = rnorm,
  par = FALSE
)
#-----------------------------------------------------------------------------
# rbind = TRUE----------------------------------------------------------------
set.seed(42)
par_lapply(
  X = X,
  FUN = rnorm,
  par = FALSE,
  rbind = TRUE
)
#-----------------------------------------------------------------------------
# rbind = FALSE---------------------------------------------------------------
set.seed(42)
par_lapply(
  X = X,
  FUN = rnorm,
  par = FALSE,
  rbind = FALSE
)
#-----------------------------------------------------------------------------
}
\seealso{
\code{\link[=lapply]{lapply()}}, \code{\link[parallel:mclapply]{parallel::mclapply()}}, and \code{\link[parallel:clusterApply]{parallel::parLapply()}}.
}
\author{
Ivan Jacob Agaloos Pesigan
}
